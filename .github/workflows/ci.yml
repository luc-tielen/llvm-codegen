name: build
on: [push, pull_request]

permissions:
  contents: read

jobs:
  build:
    name: GHC ${{ matrix.ghc-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        ghc-version: ["9.2.7", "9.4.4", "9.6.1"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up GHC ${{ matrix.ghc-version }}
        uses: haskell-actions/setup@v2
        id: setup
        with:
          ghc-version: ${{ matrix.ghc-version }}
          # Defaults, added for clarity:
          cabal-version: "latest"
          cabal-update: true

      - name: Set up LLVM
        run: |
          echo "Installing llvm-17 on $RUNNER_OS"
          if [ "$RUNNER_OS" == "macOS" ]; then
              brew update
              brew install llvm@17
          else
              wget https://apt.llvm.org/llvm.sh
              chmod +x llvm.sh
              sudo ./llvm.sh 17
          fi

      - name: Installed minor versions of GHC and Cabal
        shell: bash
        run: |
          GHC_VERSION=$(ghc --numeric-version)
          CABAL_VERSION=$(cabal --numeric-version)
          echo "GHC_VERSION=${GHC_VERSION}"     >> "${GITHUB_ENV}"
          echo "CABAL_VERSION=${CABAL_VERSION}" >> "${GITHUB_ENV}"
          cabal install hspec-discover

      - name: Configure the build
        run: |
          cabal configure --enable-tests --enable-benchmarks --disable-documentation
          cabal build --dry-run
        # The last step generates dist-newstyle/cache/plan.json for the cache key.

      - name: Restore cached dependencies
        uses: actions/cache/restore@v3
        id: cache
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ runner.os }}-ghc-${{ env.GHC_VERSION }}-cabal-${{ env.CABAL_VERSION }}-plan-${{ hashFiles('**/plan.json') }}
          restore-keys: |
            ${{ runner.os }}-ghc-${{ env.GHC_VERSION }}-cabal-${{ env.CABAL_VERSION }}-

      - name: Install dependencies
        run: cabal build all --only-dependencies

      # Cache dependencies already here, so that we do not have to rebuild them should the subsequent steps fail.
      - name: Save cached dependencies
        uses: actions/cache/save@v3
        # Caches are immutable, trying to save with the same key would error.
        if: ${{ steps.cache.outputs.cache-primary-key != steps.cache.outputs.cache-matched-key }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ steps.cache.outputs.cache-primary-key }}

      - name: Build
        run: |
          if [ "$RUNNER_OS" == "macOS" ]; then
              export PATH="/usr/local/opt/llvm/bin:$PATH"
              export LDFLAGS="-L/usr/local/opt/llvm/lib"
              export CPPFLAGS="-I/usr/local/opt/llvm/include"
              llvm-config --version
          fi
          cabal build all

      - name: Run tests
        run: |
          if [ "$RUNNER_OS" == "macOS" ]; then
              export PATH="/usr/local/opt/llvm/bin:$PATH"
              export LDFLAGS="-L/usr/local/opt/llvm/lib"
              export CPPFLAGS="-I/usr/local/opt/llvm/include"
          fi
          cabal test all
